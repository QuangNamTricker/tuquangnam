
    // T·ª± ƒë·ªông hi·ªÉn th·ªã th·ªùi gian
    function updateTime() {
      const now = new Date();
      const timeStr = now.toLocaleString('vi-VN');
      document.getElementById("currentTime").textContent = "Th·ªùi gian hi·ªán t·∫°i: " + timeStr;
    }
    setInterval(updateTime, 1000);
    updateTime();

    // N√∫t chuy·ªÉn ƒë·ªïi iframe v√† h∆∞·ªõng d·∫´n
    const btn = document.getElementById("controlButton");
    const iframe = document.getElementById("myIframe");
    const main = document.getElementById("mainContent");

    function showLoading() {
      document.getElementById('loading').style.display = 'flex';
      let dots = 0;
      const loadingDots = document.getElementById('loadingDots');
      const dotsInterval = setInterval(() => {
        dots = (dots + 1) % 4;
        loadingDots.textContent = '.'.repeat(dots);
      }, 500);
      
      // ƒê·∫øm ng∆∞·ª£c 5 gi√¢y
      let timeLeft = 5;
      document.getElementById('countdown').textContent = `T·ª± ƒë·ªông t·∫£i sau ${timeLeft} gi√¢y...`;
      const countdownInterval = setInterval(() => {
        timeLeft--;
        document.getElementById('countdown').textContent = `T·ª± ƒë·ªông t·∫£i sau ${timeLeft} gi√¢y...`;
        if (timeLeft <= 0) {
          clearInterval(countdownInterval);
        }
      }, 1000);
      
      return { dotsInterval, countdownInterval };
    }

    btn.onclick = () => {
      // Hi·ªáu ·ª©ng confetti
      confetti({
        particleCount: 100,
        spread: 70,
        origin: { y: 0.6 }
      });

      const { dotsInterval, countdownInterval } = showLoading();
      
      setTimeout(() => {
        clearInterval(dotsInterval);
        clearInterval(countdownInterval);
        document.getElementById('loading').style.display = 'none';
        
        if (iframe.style.display === "block") {
          iframe.style.display = "none";
          main.style.display = "block";
          btn.innerHTML = "üëâ L·∫•y T√†i Kho·∫£n <img src='https://i.imgur.com/shgRcYn.png' width='20' style='border-radius: 50%;'>";
        } else {
          iframe.style.display = "block";
          main.style.display = "none";
          btn.innerHTML = "üëâ Xem L·∫°i H∆∞·ªõng D·∫´n <img src='https://i.imgur.com/shgRcYn.png' width='20' style='border-radius: 50%;'>";
        }
      }, 1000);
    };

    // N√∫t cu·ªôn l√™n ƒë·∫ßu trang
    const backToTop = document.getElementById("backToTop");
    window.onscroll = function () {
      if (document.body.scrollTop > 300 || document.documentElement.scrollTop > 300) {
        backToTop.style.display = "block";
      } else {
        backToTop.style.display = "none";
      }
    };

    function scrollToTop() {
      window.scrollTo({ top: 0, behavior: "smooth" });
    }

    // Dark/Light mode toggle
    const themeToggle = document.getElementById('themeToggle');
    themeToggle.addEventListener('click', () => {
      document.body.classList.toggle('light-mode');
      if (document.body.classList.contains('light-mode')) {
        themeToggle.textContent = '‚òÄÔ∏è';
      } else {
        themeToggle.textContent = 'üåô';
      }
    });

    // Hi·ªÉn th·ªã s·ªë ng∆∞·ªùi online (gi·∫£ l·∫≠p)
    function updateOnlineUsers() {
      const baseUsers = Math.floor(Math.random() * 50) + 20;
      const hour = new Date().getHours();
      // Gi·∫£ l·∫≠p s·ªë ng∆∞·ªùi online theo gi·ªù
      const hourMultiplier = 0.5 + Math.abs(12 - hour) / 12;
      const randomUsers = Math.floor(baseUsers * hourMultiplier);
      document.getElementById('onlineCounter').textContent = `üë• ${randomUsers} ng∆∞·ªùi online`;
    }
    setInterval(updateOnlineUsers, 5000);
    updateOnlineUsers();

    // Th√¥ng b√°o t√†i kho·∫£n m·ªõi (gi·∫£ l·∫≠p)
    function checkNewAccounts() {
      // 10% c∆° h·ªôi c√≥ th√¥ng b√°o m·ªõi
      if (Math.random() < 0.1) {
        const notification = document.getElementById('notification');
        notification.style.display = 'block';
        setTimeout(() => {
          notification.style.display = 'none';
        }, 5000);
      }
    }
    setInterval(checkNewAccounts, 30000);

    // T·ª± ƒë·ªông refresh iframe m·ªói 5 ph√∫t
    setInterval(() => {
      if (iframe.style.display === 'block') {
        iframe.src = iframe.src; // Refresh iframe
      }
    }, 300000);
    // Th√™m h√†m copyToClipboard v√†o script
    function copyToClipboard(text) {
      navigator.clipboard.writeText(text).then(() => {
        alert(`ƒê√£ copy: ${text}`);
      }).catch(err => {
        console.error('L·ªói khi copy: ', err);
        prompt('Vui l√≤ng copy th·ªß c√¥ng:', text);
      });
    }
    // M·∫πo ng·∫´u nhi√™n
    const tips = [
      "Kh√¥ng ƒëƒÉng nh·∫≠p iCloud ƒë·ªÉ tr√°nh b·ªã kh√≥a t√†i kho·∫£n.",
      "S·ª≠ d·ª•ng m·∫≠t kh·∫©u m·∫°nh cho t√†i kho·∫£n Apple ID.",
      "Th∆∞·ªùng xuy√™n ki·ªÉm tra trang ƒë·ªÉ c·∫≠p nh·∫≠t t√†i kho·∫£n m·ªõi.",
      "ƒêƒÉng xu·∫•t App Store ngay sau khi t·∫£i ·ª©ng d·ª•ng.",
      "Kh√¥ng chia s·∫ª t√†i kho·∫£n v·ªõi ng∆∞·ªùi l·∫°."
    ];
    
    function showRandomTip() {
      const randomTip = tips[Math.floor(Math.random() * tips.length)];
      document.getElementById('tipText').textContent = randomTip;
    }
    setInterval(showRandomTip, 15000);
    showRandomTip();

    // ƒê√°nh gi√° sao
    function rate(stars) {
      // L∆∞u ƒë√°nh gi√° v√†o localStorage
      localStorage.setItem('userRating', stars);
      
      // Hi·ªÉn th·ªã sao ƒë√£ ch·ªçn
      const starsElements = document.querySelectorAll('.rating span');
      starsElements.forEach((star, index) => {
        if (index < stars) {
          star.classList.add('active');
        } else {
          star.classList.remove('active');
        }
      });
      
      // Th√¥ng b√°o
      alert(`C·∫£m ∆°n b·∫°n ƒë√£ ƒë√°nh gi√° ${stars} sao!`);
      
      // G·ª≠i ƒë√°nh gi√° l√™n server (gi·∫£ l·∫≠p)
      setTimeout(() => {
        console.log(`ƒê√£ g·ª≠i ƒë√°nh gi√° ${stars} sao l√™n server`);
      }, 1000);
    }

    // Kh√¥i ph·ª•c ƒë√°nh gi√° n·∫øu c√≥
    const savedRating = localStorage.getItem('userRating');
    if (savedRating) {
      rate(parseInt(savedRating));
    }

    // Copy t√†i kho·∫£n t·ª± ƒë·ªông (gi·∫£ l·∫≠p)
    document.addEventListener('click', (e) => {
      if (e.target.classList.contains('account')) {
        const accountText = e.target.textContent.trim();
        navigator.clipboard.writeText(accountText).then(() => {
          alert(`ƒê√£ copy: ${accountText}`);
        }).catch(err => {
          console.error('L·ªói khi copy: ', err);
        });
      }
    });
